openapi: 3.0.0
info:
  title: 사람인 Job Portal API
  description: API for managing job postings, user reviews, and other functionalities.
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Local development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []  # 모든 요청에 인증 적용
paths:
  /auth/register:
    post:
      summary: 회원가입
      description: 사용자 회원가입 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hi@example.com
                password:
                  type: string
                  example: "123"
                name:
                  type: string
                  example: John Doe
                preferred_sector:
                  type: string
                  example: IT
                preferred_location:
                  type: string
                  example: Seoul
                is_admin:
                  type: boolean
                  example: false
      responses:
        '200':
          description: 성공적으로 회원가입이 완료됨
  /auth/login:
    post:
      summary: 로그인
      description: 사용자 로그인 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hi@example.com
                password:
                  type: string
                  example: "123"
      responses:
        '200':
          description: 성공적으로 로그인됨
  /auth/refresh:
    post:
      summary: 토큰 Refresh
      description: JWT Access Token을 갱신하는 API
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 토큰 갱신 성공
  /auth/profile:
    get:
      summary: 프로필 조회
      description: 사용자 프로필 정보를 조회하는 API
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 프로필 조회 성공
    put:
      summary: 프로필 수정
      description: 사용자 프로필 정보를 수정하는 API
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Jane Doe
                preferred_sector:
                  type: string
                  example: Education
                preferred_location:
                  type: string
                  example: Busan
      responses:
        '200':
          description: 프로필 수정 성공
    delete:
      summary: 프로필 삭제
      description: 사용자 프로필을 삭제하는 API
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 프로필 삭제 성공
  /activity-logs:
    get:
      summary: 활동 로그 조회
      description: 사용자의 활동 로그를 조회하는 API
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 활동 로그 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        action:
                          type: string
                          example: "User logged in"
                        timestamp:
                          type: string
                          format: date-time
                          example: "2024-01-01T12:00:00Z"
                  pagination:
                    type: object
                    properties:
                      currentPage:
                        type: integer
                        example: 1
                      totalPages:
                        type: integer
                        example: 10
                      totalItems:
                        type: integer
                        example: 100
  /jobs:
    get:
      summary: 채용 공고 목록 조회
      description: 채용 공고를 조회하는 API
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: location
          in: query
          required: false
          schema:
            type: string
            example: 서울
        - name: experience
          in: query
          required: false
          schema:
            type: string
            example: 신입
        - name: salary
          in: query
          required: false
          schema:
            type: integer
            example: 3000
        - name: tech_stack
          in: query
          required: false
          schema:
            type: string
            example: Python
        - name: keyword
          in: query
          required: false
          schema:
            type: string
            example: 개발자
        - name: sort_by
          in: query
          required: false
          schema:
            type: string
            example: created_at
        - name: order
          in: query
          required: false
          schema:
            type: string
            example: desc
      responses:
        '200':
          description: 채용 공고 조회 성공
    post:
      summary: 채용 공고 등록
      description: 새로운 채용 공고를 등록하는 API
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Backend Developer
                company:
                  type: string
                  example: TechCorp
                location:
                  type: string
                  example: Seoul
                sector:
                  type: string
                  example: IT
                experience:
                  type: string
                  example: 2+ years
                salary:
                  type: integer
                  example: 50000
                tech_stack:
                  type: array
                  items:
                    type: string
                  example: ["Python", "Flask"]
                description:
                  type: string
                  example: Develop and maintain backend APIs.
                deadline:
                  type: string
                  format: date
                  example: 2024-12-31
      responses:
        '201':
          description: 채용 공고 등록 성공
  /jobs/{job_id}:
    get:
      summary: 채용 공고 상세 조회
      description: 특정 채용 공고의 상세 정보를 조회하는 API
      security:
        - bearerAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
          example: 675ac1d29366f5eee402e8cc
      responses:
        '200':
          description: 채용 공고 상세 조회 성공
    put:
      summary: 채용 공고 수정
      description: 채용 공고를 수정하는 API
      security:
        - bearerAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
          example: 675ac1d29366f5eee402e8cc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: 기술 엔지니어
                salary:
                  type: integer
                  example: 3000
                tech_stack:
                  type: array
                  items:
                    type: string
                  example: ["Python", "Flask", "AWS"]
      responses:
        '200':
          description: 채용 공고 수정 성공
    delete:
      summary: 채용 공고 삭제
      description: 특정 채용 공고를 삭제하는 API
      security:
        - bearerAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
          example: 675ac1d29366f5eee402e8cc
      responses:
        '200':
          description: 채용 공고 삭제 성공
  /companies:
    get:
      summary: 회사 목록 조회
      description: 모든 회사를 조회하는 API
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 회사 목록 조회 성공
  /companies/{company_id}:
    get:
      summary: 회사 정보 조회
      description: 특정 회사의 상세 정보를 조회하는 API
      security:
        - bearerAuth: []
      parameters:
        - name: company_id
          in: path
          required: true
          schema:
            type: string
          example: 64a8321fd4e07f3b5c940b42
      responses:
        '200':
          description: 회사 정보 조회 성공
  /reviews:
    post:
      summary: 회사 리뷰 추가
      description: 특정 회사에 대한 리뷰를 추가하는 API
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company_id:
                  type: string
                  example: 64a8321fd4e07f3b5c940b42
                rating:
                  type: integer
                  example: 5
                review_text:
                  type: string
                  example: Great company to work with!
      responses:
        '201':
          description: 리뷰 추가 성공
        '400':
          description: 잘못된 요청 (중복 리뷰 또는 필수 데이터 누락)
  /reviews/{company_id}:        
    get:
      summary: 회사 리뷰 조회
      description: 특정 회사에 대한 리뷰를 조회하는 API
      security:
        - bearerAuth: []
      parameters:
        - name: company_id
          in: path
          required: true
          schema:
            type: string
            example: 64a8321fd4e07f3b5c940b42
      responses:
        '200':
          description: 리뷰 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        user_email:
                          type: string
                          example: "user@example.com"
                        rating:
                          type: integer
                          example: 5
                        review_text:
                          type: string
                          example: "Great company to work with!"
                        created_at:
                          type: string
                          format: date-time
                          example: "2024-01-01T12:00:00Z"
        '404':
          description: 리뷰가 존재하지 않음
  /reviews/{review_id}:        
    delete:
      summary: 리뷰 삭제
      description: 특정 리뷰를 삭제하는 API
      security:
        - bearerAuth: []
      parameters:
        - name: review_id
          in: path
          required: true
          schema:
            type: string
            example: 5f4e28b7f1d47f3b5c9a4f82
      responses:
        '200':
          description: 리뷰 삭제 성공
        '404':
          description: 리뷰를 찾을 수 없거나 권한이 없음
  /applications:
    post:
      summary: 지원하기
      description: 특정 채용 공고에 지원하는 API
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                job_id:
                  type: string
                  example: "64a8321fd4e07f3b5c940b42"
                cover_letter:
                  type: string
                  example: "I am excited to apply for this position."
      responses:
        '201':
          description: 지원 성공
        '400':
          description: 잘못된 요청 (Job ID 누락 또는 중복 지원)
    get:
      summary: 지원 내역 조회
      description: 사용자별 지원 내역을 조회하는 API
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            example: "Pending"
        - name: sort_by
          in: query
          required: false
          schema:
            type: string
            example: "created_at"
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 지원 내역 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "64a8321fd4e07f3b5c940b42"
                        job_id:
                          type: string
                          example: "64a8321fd4e07f3b5c940b42"
                        user_email:
                          type: string
                          example: "user@example.com"
                        status:
                          type: string
                          example: "pending"
                        created_at:
                          type: string
                          format: date-time
                          example: "2024-01-01T12:00:00Z"
                  pagination:
                    type: object
                    properties:
                      currentPage:
                        type: integer
                        example: 1
                      totalPages:
                        type: integer
                        example: 10
                      totalItems:
                        type: integer
                        example: 100
  /applications/{application_id}:                      
    delete:
      summary: 지원 취소
      description: 특정 지원 내역을 취소하는 API
      security:
        - bearerAuth: []
      parameters:
        - name: application_id
          in: path
          required: true
          schema:
            type: string
            example: "64a8321fd4e07f3b5c940b42"
      responses:
        '200':
          description: 지원 취소 성공
        '404':
          description: 지원 내역이 존재하지 않음
  /bookmarks:
    post:
      summary: 북마크 추가/제거
      description: 채용 공고를 북마크 추가 또는 제거하는 API
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                job_id:
                  type: string
                  example: "64a8321fd4e07f3b5c940b42"
      responses:
        '200':
          description: 북마크 제거 성공
        '201':
          description: 북마크 추가 성공
        '400':
          description: 잘못된 요청 (Job ID 누락 또는 유효하지 않은 ID)
    get:
      summary: 북마크 목록 조회
      description: 북마크한 채용 공고를 조회하는 API
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 북마크 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        job_id:
                          type: string
                          example: "64a8321fd4e07f3b5c940b42"
                        created_at:
                          type: string
                          format: date-time
                          example: "2024-01-01T12:00:00Z"
                  pagination:
                    type: object
                    properties:
                      currentPage:
                        type: integer
                        example: 1
                      totalPages:
                        type: integer
                        example: 10
                      totalItems:
                        type: integer
                        example: 100

